#Область ПроверкаИОчисткаТекста
Функция ОчисткаПустыхСтрок(СтроковыеДанные) Экспорт
	КолСтр = СтрЧислоСтрок(СтроковыеДанные);
	СписокСтрок = новый Массив;
	Для Индекс = 0 ПО КолСтр Цикл
		Стр = СтрПолучитьСтроку(СтроковыеДанные, Индекс);
		Если ПустаяСтрока(Стр) Тогда
		Иначе
			СписокСтрок.Добавить(Стр);
		КонецЕсли;
		КолСтр = КолСтр - 1;
	КонецЦикла;
	Возврат СписокСтрок;
КонецФункции


// Вспомогательная функция для очистки пустых строк
// 
// Параметры:
// 	СтроковыеДанные
// Возвращаемое значение:
// 	Массив - Описание
Функция ОчисткаПустыхСтрокДляВозврата(СтроковыеДанные) Экспорт
	КолСтр = СтрЧислоСтрок(СтроковыеДанные);
	СписокСтрок = новый Массив;
	Для Индекс = 0 ПО КолСтр Цикл
		Стр = СтрПолучитьСтроку(СтроковыеДанные, Индекс);
		Если ПустаяСтрока(Стр) Тогда
		Иначе
			Стр = СтрЗаменить(Стр, " ", "");
			Стр = Сред(Стр, 0, 13);
			СписокСтрок.Добавить(Стр);
		КонецЕсли;
		КолСтр = КолСтр - 1;
	КонецЦикла;
	Возврат СписокСтрок;
КонецФункции


// Процедура для разбивки текста билета на значения и генерации справочника Билет
// 
// Параметры:
// 	СтруктураОтправки
Процедура ПолучениеДанныхИзМассива(СтруктураОтправки) Экспорт
	#Область ОпределениеПеременных
	ДатаТекста = "";
	МесяцТекста = "";
	ГодТекста = "";
	PNRТекста = "";
	ВалидаторТекст = "";
	ДатаОтправленияТекст = "";
	МесяОтправленияТекст = "";
	ПунктОтправленияТекст = "";
	ПунктНазначенияТекст = "";
	СтатусТекст = "";
	ДатаОтправленияТекст_2 = "";
	МесяОтправленияТекст_2 = "";
	ПунктОтправленияТекст_2 = "";
	ПунктНазначенияТекст_2 = "";
	СтатусТекст_2 = "";
	СуммаВЕвроТекст = "";
	СуммаВСом = "";
	ВсегоВТексте = "";
	ПокупательТекст = "";
	КодАвиаКомпанииТекст = "";
	НомерБилетаТекст = "";
	МаскаБилетаТекст = "";
	ВалютаСпр = НЕОПРЕДЕЛЕНО;
	ВалютаЭквивалент = Неопределено;
	Метка = 0;
	Индекс = 0;
	МассивДанных = ОчисткаПустыхСтрок(СтруктураОтправки.СтроковыеДанные);
	Расшифровка = Новый ТаблицаЗначений();
	Расшифровка.Колонки.Добавить("Выписан");
	Расшифровка.Колонки.Добавить("PNR");
	Расшифровка.Колонки.Добавить("ДатаВылета");
	Расшифровка.Колонки.Добавить("ДатаВылета_2");
	Расшифровка.Колонки.Добавить("Направление");
	Расшифровка.Колонки.Добавить("Направление_2");
	Расшифровка.Колонки.Добавить("СтатусБилета");
	Расшифровка.Колонки.Добавить("СтатусБилета_2");
	Расшифровка.Колонки.Добавить("СуммаТарифаEUR");
	Расшифровка.Колонки.Добавить("СуммаТарифа");
	Расшифровка.Колонки.Добавить("Сборы");
	Расшифровка.Колонки.Добавить("ИтогоСумма");
	Расшифровка.Колонки.Добавить("ВалютаВзаиморасчетов");
	Расшифровка.Колонки.Добавить("ВалютаЭквивалент");
	Расшифровка.Колонки.Добавить("Валидатор");
	Расшифровка.Колонки.Добавить("Агенство");
	Расшифровка.Колонки.Добавить("Покупатель");
	Расшифровка.Колонки.Добавить("КурсВалют");
	#КонецОбласти
	#Область ОбработкаМассиваВЦикле
	Для каждого Стр из МассивДанных Цикл
		Индекс = Индекс + 1;
		Если Метка > 0 Тогда
			ПокупательТекст = МассивДанных[Метка + 1];
		КонецЕсли;
		Если СтрНачинаетсяС(Стр, "ВЫПИСАН") Тогда
			Метка = Индекс;
			ДатаТекста = Сред(Стр, 9, 2);
			МесяцТекста = Сред(Стр, 11, 3);
			ГодТекста = Сред(Стр, 14, 2);
			PNRТекста = Сред(Стр, 44, 6);
		ИначеЕсли СтрНачинаетсяС(Стр, " 1") Тогда
			ДатаОтправленияТекст = Сред(Стр, 17, 2);
			МесяОтправленияТекст = Сред(Стр, 19, 3);
			ПунктОтправленияТекст = Сред(Стр, 30, 3);
			ПунктНазначенияТекст = Сред(Стр, 34, 3);
			СтатусТекст = Сред(Стр, 79, 1);
		ИначеЕсли СтрНачинаетсяС(Стр, " 2") Тогда
			ДатаОтправленияТекст_2 = Сред(Стр, 17, 2);
			МесяОтправленияТекст_2 = Сред(Стр, 19, 3);
			ПунктОтправленияТекст_2 = Сред(Стр, 30, 3);
			ПунктНазначенияТекст_2 = Сред(Стр, 34, 3);
			СтатусТекст_2 = Сред(Стр, 79, 1);
		ИначеЕсли СтрНачинаетсяС(Стр, "ТАРИФ") Тогда
			ДанныеФункции = ВозвратВалютИСумм(Стр);
			СуммаВСом = ДанныеФункции.Сумма;
			ВалютаЭквивалент = ДанныеФункции.ВалютаВзаиморасчетов;
		ИначеЕсли СтрНачинаетсяС(Стр, "СБОРЫ") Тогда
			ФлагFree = Ложь;
		ИначеЕсли СтрНачинаетсяС(Стр, "ВСЕГО") Тогда
			Если СтрНайти(Стр, "ДОЛ") > 0 Тогда
				Позиция = СтрНайти(Стр, "ДОЛ") - 12;
				ВсегоВТексте = Сред(Стр, 11, Позиция);
				ВалютаСпр = Справочники.Валюта.НайтиПоНаименованию("USD");
			ИначеЕсли СтрНайти(Стр, "РУБ") > 0 Тогда
				Позиция = СтрНайти(Стр, "РУБ") - 12;
				ВсегоВТексте = Сред(Стр, 11, Позиция);
				ВалютаСпр = Справочники.Валюта.НайтиПоНаименованию("RUB");
			ИначеЕсли СтрНайти(Стр, "ЕВР") > 0 Тогда
				Позиция = СтрНайти(Стр, "ЕВР") - 12;
				ВсегоВТексте = Сред(Стр, 11, Позиция);
				ВалютаСпр = Справочники.Валюта.НайтиПоНаименованию("EUR");
			ИначеЕсли СтрНайти(Стр, "УЗС") > 0 Тогда
				Позиция = СтрНайти(Стр, "УЗС") - 12;
				ВсегоВТексте = Сред(Стр, 11, Позиция);
				ВалютаСпр = Справочники.Валюта.НайтиПоНаименованию("UZS");
			ИначеЕсли СтрНайти(Стр, "ТЙС") > 0 Тогда
				Позиция = СтрНайти(Стр, "ТЙС") - 12;
				ВсегоВТексте = Сред(Стр, 11, Позиция);
				ВалютаСпр = Справочники.Валюта.НайтиПоНаименованию("TJS");
			ИначеЕсли СтрНайти(Стр, "FREE") > 0 Тогда
				ВсегоВТексте = 0;
				ФлагFree = Истина;
			КонецЕсли;

		ИначеЕсли СтрНачинаетсяС(Стр, "ОПЛАТА") Тогда
			Если ФлагFree = Истина Тогда
			Иначе
				Позиция = СтрНайти(Стр, "ТЙС") - 12;
			КонецЕсли;
		ИначеЕсли СтрНачинаетсяС(Стр, "ЭБ") Тогда
			КодАвиаКомпанииТекст = Сред(Стр, 4, 3);
			Позиция = СтрНайти(Стр, "›") - 7;
			НомерБилетаТекст = Сред(Стр, 7, Позиция);
			МаскаБилетаТекст = Сред(Стр, 4, 13);
		ИначеЕсли СтрНачинаетсяС(Стр, "АГН") Тогда
			Позиция = СтрНайти(Стр, "ППР") + 4;
			ВалидаторТекст = Сред(Стр, Позиция, 8);
		КонецЕсли;
	КонецЦикла;
	#КонецОбласти
	ВыписанДатаТекст = "20" + ГодТекста + ОпределениеМесяца(МесяцТекста)
		+ ДатаТекста;
	ДатаВылетаТекст = "20" + ГодТекста + ОпределениеМесяца(МесяОтправленияТекст)
		+ ДатаОтправленияТекст;
	ДатаВылетаТекст_2 = "20" + ГодТекста
		+ ОпределениеМесяца(МесяОтправленияТекст_2) + ДатаОтправленияТекст_2;
	СтрокаРасшифровка = Расшифровка.Добавить();
	СтрокаРасшифровка.Выписан = ДАТА(ВыписанДатаТекст);
	СтрокаРасшифровка.PNR = PNRТекста;
	СтрокаРасшифровка.ВалютаЭквивалент = ВалютаЭквивалент;
	Если НЕ ДатаОтправленияТекст = "" Тогда
		СтрокаРасшифровка.ДатаВылета = Дата(ДатаВылетаТекст);
	КонецЕсли;
	Если НЕ ДатаОтправленияТекст_2 = "" Тогда
		СтрокаРасшифровка.ДатаВылета_2 = Дата(ДатаВылетаТекст_2);
	КонецЕсли;

	Если СтатусТекст = "O" Тогда
		СтрокаРасшифровка.СтатусБилета = Перечисления.СтатусБилета.О;
	ИначеЕсли СтатусТекст = "R" Тогда
		СтрокаРасшифровка.СтатусБилета = Перечисления.СтатусБилета.R;
	КонецЕсли;
	Если ФлагFree = Истина Тогда
		СтрокаРасшифровка.СтатусБилета = Перечисления.СтатусБилета.FREE;
	КонецЕсли;
	Если СтатусТекст_2 = "O" Тогда
		СтрокаРасшифровка.СтатусБилета_2 = Перечисления.СтатусБилета.О;
	ИначеЕсли СтатусТекст_2 = "R" Тогда
		СтрокаРасшифровка.СтатусБилета_2 = Перечисления.СтатусБилета.R;
	КонецЕсли;

	Если НЕ СуммаВЕвроТекст = "" Тогда
		СтрокаРасшифровка.СуммаТарифаEUR = ЧИСЛО(СуммаВЕвроТекст);
	Иначе
		СтрокаРасшифровка.СуммаТарифаEUR = 0;
	КонецЕсли;

	Агенство = МодульПроведенияНаСервере.НайтиПульт(ВалидаторТекст);
	ПультСпр = Справочники.Пульт.НайтиПоКоду(ВалидаторТекст, , , Агенство);
	СтрокаРасшифровка.Валидатор = ПультСпр;
	//----------Проверка и конвертация------------------------------------
	Сомони = Справочники.Валюта.НайтиПоНаименованию("TJS");
	Если ВалютаЭквивалент <> Сомони И СтруктураОтправки.Конвертация = Ложь Тогда
		СтрокаРасшифровка.ВалютаВзаиморасчетов = Сомони;
		СтрокаРасшифровка.ВалютаЭквивалент = ВалютаЭквивалент;
		СтрокаРасшифровка.КурсВалют = СтруктураОтправки.Курс;
		Если НЕ СуммаВСом = "" Тогда
			СуммаСКонвертацией = ЧИСЛО(СуммаВСом) * СтруктураОтправки.Курс;
			ВсегоСКонвертацией = ЧИСЛО(ВсегоВТексте) * СтруктураОтправки.Курс;
			СтрокаРасшифровка.СуммаТарифа = СуммаСКонвертацией;
			СтрокаРасшифровка.Сборы = ВсегоСКонвертацией - СуммаСКонвертацией;
			СтрокаРасшифровка.ИтогоСумма = СтрокаРасшифровка.СуммаТарифа
				+ СтрокаРасшифровка.Сборы;
		Иначе
			СтрокаРасшифровка.СуммаТарифа = 0;
			СтрокаРасшифровка.Сборы = 0;
			СтрокаРасшифровка.ИтогоСумма = 0;
		КонецЕсли;
	Иначе
		СтрокаРасшифровка.КурсВалют = 1;
		СтрокаРасшифровка.ВалютаВзаиморасчетов = ВалютаСпр;
		СтрокаРасшифровка.ВалютаЭквивалент = ВалютаЭквивалент;
		Если НЕ СуммаВСом = "" Тогда
			СтрокаРасшифровка.СуммаТарифа = ЧИСЛО(СуммаВСом);
			СтрокаРасшифровка.Сборы = ЧИСЛО(ВсегоВТексте) - ЧИСЛО(СуммаВСом);
			СтрокаРасшифровка.ИтогоСумма = СтрокаРасшифровка.СуммаТарифа
				+ СтрокаРасшифровка.Сборы;
		Иначе
			СтрокаРасшифровка.СуммаТарифа = 0;
			СтрокаРасшифровка.Сборы = 0;
			СтрокаРасшифровка.ИтогоСумма = 0;
		КонецЕсли;
	КонецЕсли;
	//--------------------------------------------------------------------
	СтрокаРасшифровка.Покупатель = ПокупательТекст;

	//---------------Поиск и генерация аналитики направлений------------------------------------------------------------------------------
	АВК = Справочники.Авиакомпания.НайтиПоНаименованию(КодАвиаКомпанииТекст);
	Если НЕ ПунктНазначенияТекст = "" Тогда
		ОтпрНазнач = МодульПроведенияНаСервере.ПоискОтправленийНазначений(ПунктОтправленияТекст, ПунктНазначенияТекст);
		СтрокаРасшифровка.Направление = МодульПроведенияНаСервере.ГенерацияНаправлений(ОтпрНазнач.Отправление, ОтпрНазнач.Прибытие, АВК);
	КонецЕсли;
	Если НЕ ПунктОтправленияТекст_2 = "" Тогда
		ОтпрНазнач_2 = МодульПроведенияНаСервере.ПоискОтправленийНазначений(ПунктОтправленияТекст_2, ПунктНазначенияТекст_2);
		СтрокаРасшифровка.Направление_2 = МодульПроведенияНаСервере.ГенерацияНаправлений(ОтпрНазнач_2.Отправление, ОтпрНазнач_2.Прибытие, АВК);
	КонецЕсли;
	//-------------------------------------------------------------------------------------------------------------------------------------

	//---Создание справочника Билет----------------------------	
	БилетСпр = Справочники.Билет.СоздатьЭлемент();
	БилетСпр.ТекстБилета = СтруктураОтправки.СтроковыеДанные;
	Если АВК = Справочники.Авиакомпания.ПустаяСсылка() Тогда
		АВК = Справочники.Авиакомпания.СоздатьЭлемент();
		АВК.Наименование = КодАвиаКомпанииТекст;
		АВК.Записать();
	Иначе
		БилетСпр.КодАвиакомпании = АВК;
	КонецЕсли;
	БилетСпр.НомерБилета = ЧИСЛО(НомерБилетаТекст);
	БилетСпр.РасшифровкаТекстаБилета.Загрузить(Расшифровка);
	БилетСпр.Дата = ТекущаяДата();
	БилетСпр.Кассир = СтруктураОтправки.Кассир;
	БилетСпр.МаскаБилета = МаскаБилетаТекст;
	БилетСпр.Записать();
	//---------------------------------------------------------
КонецПроцедуры


// Функция определения месяца из текста билета
// 
// Параметры:
// 	Текст - Строка - Описание
// Возвращаемое значение:
// 	Строка - Описание
Функция ОпределениеМесяца(Текст)
	Текст = ВРЕГ(Текст);
	Если Текст = "ЯНВ" Тогда
		Возврат "01";
	ИначеЕсли Текст = "ФЕВ" Тогда
		Возврат "02";
	ИначеЕсли Текст = "МАР" Тогда
		Возврат "03";
	ИначеЕсли Текст = "АПР" Тогда
		Возврат "04";
	ИначеЕсли Текст = "МАЙ" Тогда
		Возврат "05";
	ИначеЕсли Текст = "ИЮН" Тогда
		Возврат "06";
	ИначеЕсли Текст = "ИЮЛ" Тогда
		Возврат "07";
	ИначеЕсли Текст = "АВГ" Тогда
		Возврат "08";
	ИначеЕсли Текст = "СЕН" Тогда
		Возврат "09";
	ИначеЕсли Текст = "ОКТ" Тогда
		Возврат "10";
	ИначеЕсли Текст = "НОЯ" Тогда
		Возврат "11";
	ИначеЕсли Текст = "ДЕК" Тогда
		Возврат "12";
	КонецЕсли;
КонецФункции


// Функция для проверки маски билета предназначена для модуля объекта справочника Билет 
// 
// Параметры:
// 	МаскаБилета
// Возвращаемое значение:
// 	Булево - Описание
Функция ВозвратМаскиБилета(МаскаБилета) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	Билет.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Билет КАК Билет
		|ГДЕ
		|	Билет.МаскаБилета = &МаскаБилета";

	Запрос.УстановитьПараметр("МаскаБилета", МаскаБилета);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

// Функция для возврат валюты эквивалента и суммы из текста билета
// 
// Параметры:
// 	Стр - Произвольный - Описание
// Возвращаемое значение:
// 	Структура - Описание
Функция ВозвратВалютИСумм(Стр)
	КоличествоСимволов = 0;
	Позиция = 0;
	ПозицияВалюты = 0;
	Сумма = 0;
	СтруктураВозврата = Новый Структура;
	ВалютаМассив = Новый Массив;
	ВалютаМассив.Добавить("ТЙС");
	ВалютаМассив.Добавить("РУБ");
	ВалютаМассив.Добавить("ЕВР");
	ВалютаМассив.Добавить("УЗС");
	ВалютаМассив.Добавить("ДОЛ");

	//Поиск <E/> в строке-------------------------------------------------------------------------	
	Для каждого СтрМассива из ВалютаМассив Цикл
		Если СтрНайти(Стр, СтрМассива) > 0 Тогда
			Позиция = СтрНайти(Стр, "E/");
			ПозицияВалюты = СтрНайти(Стр, СтрМассива);
			Если Позиция < ПозицияВалюты И НЕ Позиция = 0 Тогда
				КоличествоСимволов = ПозицияВалюты - Позиция;
				Сумма = ЧИСЛО(Сред(Стр, Позиция + 2, КоличествоСимволов - 2));
				Если СтрМассива = "ТЙС" Тогда
					ВалютаСпр = Справочники.Валюта.НайтиПоНаименованию("TJS");
				ИначеЕсли СтрМассива = "РУБ" Тогда
					ВалютаСпр = Справочники.Валюта.НайтиПоНаименованию("RUB");
				ИначеЕсли СтрМассива = "ЕВР" Тогда
					ВалютаСпр = Справочники.Валюта.НайтиПоНаименованию("EUR");
				ИначеЕсли СтрМассива = "УЗС" Тогда
					ВалютаСпр = Справочники.Валюта.НайтиПоНаименованию("UZS");
				ИначеЕсли СтрМассива = "ДОЛ" Тогда
					ВалютаСпр = Справочники.Валюта.НайтиПоНаименованию("USD");
				КонецЕсли;
				СтруктураВозврата.Вставить("Сумма", Сумма);
				СтруктураВозврата.Вставить("ВалютаВзаиморасчетов", ВалютаСпр);
				Прервать;
			Иначе
				Продолжить;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	//-----------------------------------------------------------------------------------------------

	//Если не нашелся эквивалент ищем по <B/>--------------------------------------------------------
	Если СтруктураВозврата.Количество() = 0 Тогда

		Для каждого СтрМассива из ВалютаМассив Цикл
			Если СтрНайти(Стр, СтрМассива) > 0 Тогда
				Позиция = СтрНайти(Стр, "B/");
				ПозицияВалюты = СтрНайти(Стр, СтрМассива);
				Если Позиция < ПозицияВалюты И НЕ Позиция = 0 Тогда
					КоличествоСимволов = ПозицияВалюты - Позиция;
					Сумма = ЧИСЛО(Сред(Стр, Позиция + 2, КоличествоСимволов - 2));
					Если СтрМассива = "ТЙС" Тогда
						ВалютаСпр = Справочники.Валюта.НайтиПоНаименованию("TJS");
					ИначеЕсли СтрМассива = "РУБ" Тогда
						ВалютаСпр = Справочники.Валюта.НайтиПоНаименованию("RUB");
					ИначеЕсли СтрМассива = "ЕВР" Тогда
						ВалютаСпр = Справочники.Валюта.НайтиПоНаименованию("EUR");
					ИначеЕсли СтрМассива = "УЗС" Тогда
						ВалютаСпр = Справочники.Валюта.НайтиПоНаименованию("UZS");
					ИначеЕсли СтрМассива = "ДОЛ" Тогда
						ВалютаСпр = Справочники.Валюта.НайтиПоНаименованию("USD");
					КонецЕсли;
					СтруктураВозврата.Вставить("Сумма", Сумма);
					СтруктураВозврата.Вставить("ВалютаВзаиморасчетов", ВалютаСпр);
					Прервать;
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Возврат СтруктураВозврата
	Иначе
		Возврат СтруктураВозврата;
	КонецЕсли;
КонецФункции

// Функция для возрата валюта из текста предназначена для формы "ВыборКассира" обработки "МастерВводаДанных"
// 
// Параметры:
// 	Стр
// Возвращаемое значение:
// 	Структура, Неопределено - Описание
Функция ПреварительныйВозврат(Стр) Экспорт
	МассивДанных = ОчисткаПустыхСтрок(Стр);
	ДанныеФункции = Неопределено;
	Для каждого СтрМассива из МассивДанных Цикл
		Если СтрНачинаетсяС(СтрМассива, "ТАРИФ") Тогда
			ДанныеФункции = ВозвратВалютИСумм(СтрМассива);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат ДанныеФункции;
КонецФункции
#КонецОбласти

